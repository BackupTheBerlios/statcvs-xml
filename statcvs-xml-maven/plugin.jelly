<?xml version="1.0"?>

<!-- ==================================================================
       Generate CVS statistics on the current CVS project
        
       Note: Needs JDK 1.4+        
     ================================================================== -->
<project 
  xmlns:j="jelly:core"
  xmlns:util="jelly:util"
  xmlns:maven="jelly:maven"
  xmlns:ant="jelly:ant"
  xmlns:doc="doc"
  xmlns:log="jelly:log">

  <!--==================================================================-->
  <!-- Goal to check for JDK 1.4 and to initialize variables            -->
  <!--==================================================================-->
  <goal name="statcvs:init">
    <ant:available property="jdk14" classname="java.lang.CharSequence"/>
    <j:if test="${jdk14 != 'true'}">
      <ant:fail>The StatCvs plugin requires JDK 1.4+</ant:fail>
    </j:if>

        <j:set var="statcvs.logfile" 
            value="${maven.build.dir}/statcvs.log"/>
        <ant:property name="statcvs.repository" value="${basedir}"/>
		<j:set var="history" value="${statcvs.history}"/>

		<!-- parse cvs connection string by calling scm plugin -->
		<attainGoal name="scm:validate"/>
		<j:set var="cvs.root" value="${pom.getPluginContext('maven-scm-plugin').getVariable('maven.scm.cvs.root')}"/>
		<j:set var="cvs.rsh" value="${pom.getPluginContext('maven-scm-plugin').getVariable('maven.scm.cvs.rsh')}"/>
		<j:set var="cvs.quiet" value="${pom.getPluginContext('maven-scm-plugin').getVariable('maven.scm.cvs.quiet')}"/>
		<j:set var="cvs.module" value="${pom.getPluginContext('maven-scm-plugin').getVariable('maven.scm.cvs.module')}"/>

        <j:if test="${history}">
          <j:set var="statcvs.repository" 
              value="${maven.build.dir}/statcvs/${cvs.module}"/>
        </j:if>
  </goal>
 
  <!--==================================================================-->
  <!-- Default goal                                                     -->
  <!--==================================================================-->
  <goal name="statcvs" prereqs="statcvs:generate"
      description="Generate CVS statistics for the current CVS project"/>

  <!--==================================================================-->
  <!-- Goal to create cvs log and to generate reports                   -->
  <!--==================================================================-->
  <goal name="statcvs:generate" prereqs="statcvs:init"
      description="Generate CVS statistics for the current CVS project">

    <j:choose>
      <j:when test="${maven.mode.online}">
        <ant:mkdir dir="${maven.build.dir}"/>

        <j:if test="${history}">
		  <!-- checkout or update repository of 1.1 revisions 
               and create cvs log from there, that includes 
			   information about all files (including deleted files) -->

		  <util:available file="${statcvs.repository}">
            <j:set var="repositoryPresent" value="true"/>
          </util:available>

	      <j:choose>
            <j:when test="${repositoryPresent}">
              <ant:echo>updating...</ant:echo>
			  <ant:cvs
                  command="update -r1.1" 
                  dest="${statcvs.repository}"
				  compression="true"
                  quiet="${cvs.quiet}"
				  cvsRsh="${cvs.rsh}"
				  cvsRoot="${cvs.root}"/>
				  <!-- failonerror="true"/> -->
            </j:when>
            <j:otherwise>
              <ant:echo>checking out to ${maven.build.dir}/statcvs...</ant:echo>
			  <ant:cvs
                  command="checkout -r1.1 ${cvs.module}" 
                  dest="${maven.build.dir}/statcvs"
				  compression="true"
                  quiet="${cvs.quiet}"
				  cvsRsh="${cvs.rsh}"
				  cvsRoot="${cvs.root}"/>
				  <!-- failonerror="true"/> -->
            </j:otherwise>
          </j:choose>
        </j:if>

        <ant:echo>fetching cvs logs at ${statcvs.repository}...</ant:echo>
		<ant:cvs
			command="log ${statcvs.log.options}" 
			output="${statcvs.logfile}"
			dest="${statcvs.repository}"
			compression="true"
			quiet="${cvs.quiet}"
			cvsRsh="${cvs.rsh}"
			cvsRoot="${cvs.root}"/>
			<!-- failonerror="true"/> -->

		<attainGoal name="statcvs:generate-xdoc"/>
      </j:when>
      <j:otherwise>
        <ant:echo>StatCvs can obtain statistics in the online-mode only.</ant:echo>
      </j:otherwise>
    </j:choose>
  </goal>

  <!--==================================================================-->
  <!-- Goal to create cvs log and to generate reports                   -->
  <!--==================================================================-->
  <goal name="statcvs:generate-xdoc" prereqs="statcvs:init">
        <!-- create directories for documents --> 
        <property name="maven.docs.dest" 
            value="${pom.getPluginContext('maven-xdoc-plugin').getVariable('maven.docs.dest')}"/>
        <property name="maven.gen.docs" 
            value="${pom.getPluginContext('maven-xdoc-plugin').getVariable('maven.gen.docs')}"/>
        <ant:mkdir dir="${maven.docs.dest}/statcvs"/>
        <ant:mkdir dir="${maven.gen.docs}/statcvs"/>

		<!-- run statcvs-xml -->
		<j:set var="include" value="${statcvs.include}"/>
		<j:set var="exclude" value="${statcvs.exclude}"/>
		<j:set var="weburl" value="${pom.repository.url}"/>
        <ant:java classname="de.berlios.statcvs.xml.Main" fork="true">
          <ant:arg line="-output-dir ${maven.gen.docs}/statcvs"/>
          <ant:arg line="-title '${statcvs.title}'"/>
          <ant:arg line="-renderer xdoc"/> 
          <j:if test="${statcvs.verbose}">
		    <ant:arg line="-verbose"/> 
          </j:if>
          <j:if test="${!empty(weburl)}">
            <ant:arg line="-weburl '${weburl}'"/>
          </j:if>
          <j:if test="${!empty(include)}">
            <ant:arg line="-include '${include}'"/>
          </j:if>
          <j:if test="${!empty(exclude)}">
            <ant:arg line="-exclude '${exclude}'"/>
          </j:if>
          <ant:arg value="${statcvs.logfile}"/>
          <ant:arg value="${statcvs.repository}"/>
          <ant:classpath>
            <ant:pathelement location="${plugin.getDependencyPath('statcvs-xml:statcvs-xml')}"/>
            <ant:pathelement location="${plugin.getDependencyPath('jfreechart:jfreechart')}"/>
            <ant:pathelement location="${plugin.getDependencyPath('jcommon:jcommon')}"/>
            <ant:pathelement location="${plugin.getDependencyPath('jdom:jdom')}"/>
            <ant:pathelement location="${plugin.getDependencyPath('commons-logging:commons-logging')}"/>
            <ant:pathelement location="${plugin.getDependencyPath('commons-jexl:commons-jexl'	)}"/>
          </ant:classpath>
        </ant:java>

        <!-- copy images  -->
        <copy todir="${maven.docs.dest}/statcvs" overwrite="yes" 
            filtering="no">
          <fileset dir="${maven.gen.docs}/statcvs">
            <include name="**/*.png"/>
          </fileset>
        </copy>
  </goal>

  <!--==================================================================-->
  <!-- Goal to register as report                                       -->
  <!--==================================================================-->
  <goal name="maven-statcvs-plugin:register" prereqs="statcvs:init">
    <doc:registerReport 
        name="StatCvs Report" 
        pluginName="statcvs"
        link="statcvs/index"
        description="Show some statistics about the CVS repository"/>
  </goal>

  <!--==================================================================-->
  <!-- Goal to deregister as report                                     -->
  <!--==================================================================-->
  <goal name="maven-statcvs-plugin:deregister" prereqs="statcvs:init">
    <doc:deregisterReport name="StatCvs Report"/>
  </goal>

  <!--==================================================================-->
  <!-- Goal to call goal to generate report                             -->
  <!--==================================================================-->
  <goal name="statcvs:report" prereqs="statcvs"/>

</project>
